

linux进程间通信－－－使用流套接字

进程间的通信，所通信的进程都是再同一台计算机上的,而使用socket进行通信的进程可以是同一台计算机的
进程，也是可以是通过网络连接起来的不同计算机上的进程。
通常我们使用socket进行网络编程，这里讲述如何使用socket进行简单的网络编程

一、什么是socket

socket,即套接字是一种通信机制，凭借这种机制，客户/服务器(即要进行通ｉｘｎ
的进程)系统的开发工作既可以在本地单机上进行，也可以跨网络进行。
也就是说它可以不在同一台计算机但通过网络连接计算机上的进程进行通信。
套接字明确地把客户端和服务器区分开来


二、套接字的属性


套接字的特性由３个属性确定，分别是,域，类型和协议

１．套接字的域

它指定套接字通信中的网络介质，最常见的套接字域是AF_INET,
它指的是Internet网络。当客户使用套接字进行跨网络的连接时，
它就需要用到服务器计算机的IP地址和端口来指定一台联网机器上的某个
特定服务，所以再使用socket作为通信的终点，服务器应用程序必须在
开始通信之前绑定一个端口，服务器在指定的端口等待客户的连接。
另一个域AF_UNIX表示UNIX文件系统，它就是文件输入、输出，而它
的地址就是文件名


２．套接字类型

因特网提供了两种通信机制：流(stream)和数据报(datagram),因而
套接字的类型也就分为流套接字和数据报套接字。这里主要介绍流套接字

流套接字由类型SOCK_STREAM指定，它们是在AF_INET域中通过TCP/IP
连接实现，同时也是AF_UNIX中常用的套接字类型。流套接字提供的是一个
有序，可靠，双向字节流的连接，因此发送的数据可以确保不会丢失，
重复或乱序到达，而且它还有一定的出错重新发送的机制

与流套接字相对的是由类型SOCK_DGRAM指定的数据报套接字，它不需要
建立连接和维持一个连接，它们在AF_INET中通常是通过UDP/IP协议实现的。
它低可以发送的数据的长度有限制，数据报作为一个单独的网络消息被传输，
它可能会丢失，复制或错乱到达，UDP不是一个可靠的协议，但是它的速度
比较高，因为它徐娅总是建立和维持一个连接。

３．　套接字协议

只要底层的传输机制允许不止一个协议来提供要求的套接字类型，我们就可以
为套接字选择一个特定的协议。通常只需要使用默认值


三、套接字地址

每个套接字都有其自己的地址格式，对于AF_UNIX域套接字来说，它的地址
由结构sockaddr_un来描述，该结构定义再头文件sys/un.h ，它的定义如下


struct sockaddr_un{
    sa_family_t sun family; //AF_UNIX,它是一个短整型
    char sum_path[];// 路径名
};


对于AF_INEF域套接字来说，它的地址结构由sockaddr_in 来描述，
它至少包括一下几个成员：

struct_sockaddr_in{
    short int sin_family; // AF_INET
    unsigned short int sin_port: //端口
    struct in_addr sin_addr; IP地址
};

而in_addr被定义为：

struct in_addr{
    unsigned long int s_addr;
}

四、基于流套接字的客户端、服务器的工作流程

使用socket进行进程通信的进程采用的客户/服务器系统是如何工作的？

１．服务器端

首先服务器应用程序用系统调用socket来创建一个套接字，它是系统分配给该
服务器进程的类似文件描述符的资源，它不能与其他的进程共享


接下来，服务器进程会给套接字起一个名字，我们使用系统调用bind来给
套接字命名。然后服务器进程就开始等待客户连接到这个套接字

然后，系统调用listen来创建一个队列并将其用于存放来自客户的进入连接

最后，服务器通过系统调用accept来接受客户的连接。它会创建一个原有的
命名套接不同的新套接字，这个套接字只用于与这个特定客户端进行通信，
而命名套接字(即原先的套接字)则被保留下来继续处理来自其他客户的连接

２．客户端

基于socket的客户端闭服务器端简单，同样，客户应用程序首先调用socket
来创建一个未命名的套接字，然后将服务器的命名套接字作为一个地址来
调用connect与服务器建立连接

一旦连接建立，我们就可以像使用底层的文件描述符那样用套接字
来实现双向数据的通信


五、流式socket的接口及作用

socket的接口函数什么在头文件sys/types.h和　sys/socket.h中

１．创建套接字----socket系统调用

该函数用来创建一个套接字，并返回一个描述符，该描述符可以用来访问
该套接字，它的原型如下：

int socket(int domain,int type,int protocol);


函数中的三个参数分别对应前面


https://www.jb51.net/article/112388.htm